name: Test template and generated project

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - main

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

env:
  # This will let tools make use of the full palette of
  # 256 colours.
  FORCE_COLOR: "3"

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Check style
        run: uvx pre-commit run -a

  template_test:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name:
      Template Generation/Project Tests (${{ matrix.os }} / Python ${{ matrix.python-version }})
    steps:
      - name: Checkout pybamm-cookie
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install nox
        run: uv tool install nox

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Test template generation
        run: nox -s template-tests --verbose

      - name: Run coverage tests
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: nox -s coverage --verbose

      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  run_doctests:
    needs: style
    runs-on: ubuntu-latest
    name: Doctests (ubuntu-latest / Python 3.12)

    steps:
      - name: Check out pybamm-cookie repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check if the documentation can be built
        run: uvx nox -s docs --verbose

  generated_project_tests:
    needs: [template_test]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        backend: [hatch, setuptools]
        vcs: [true, false]

    name: Generated Project Tests (${{ matrix.os }} / Python ${{ matrix.python-version }} / Backend ${{ matrix.backend }} / VCS ${{ matrix.vcs }})

    steps:
      - name: Checkout pybamm-cookie
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install dependencies
        run: |
          uv pip install copier jinja2_time
          uv tool install nox

      - name: Generate project
        run: copier copy . ../ --data project_name=pybamm-${{ matrix.backend }}-${{ matrix.vcs }} --data project_slug=pybamm_${{ matrix.backend }}_${{ matrix.vcs }} --data backend=${{ matrix.backend }} --data vcs=${{ matrix.vcs }} --trust --defaults

      - name: Test the generated project
        working-directory: ../pybamm-${{ matrix.backend }}-${{ matrix.vcs }}
        run: nox -s generated-project-tests --verbose

  run_generated_project_doctests:
    needs: [template_test]
    runs-on: ubuntu-latest
    name: Generated Project Doctests (ubuntu-latest / Python 3.12)

    steps:
      - name: Check out pybamm-cookie repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          python-version: 3.12

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: 3.12
          activate-environment: true
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install dependencies
        run: uv pip install copier jinja2_time

      - name: Install copier and jinja2_time and generate a template with default values
        run: copier copy . . --trust --defaults

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check if the documentation can be built
        working-directory: ./pybamm-example-project
        run: |
          git add .
          git commit -am "initial commit"
          uvx nox -s docs --verbose
