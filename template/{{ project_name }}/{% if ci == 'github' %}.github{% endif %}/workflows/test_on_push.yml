name: Project Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - main

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Check style
        run: |
          python -m pip install pre-commit
          pre-commit run -a

  test_project:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name:
      Template Generation/Project Tests (${{ matrix.os }} / Python ${{ matrix.python-version }})
    steps:
      - name: Checkout pybamm-cookie
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        uses: yezz123/setup-uv@v4
        with:
          uv-venv: ".venv"

      - name: Install nox
        run: uv pip install nox[uv]

      - name: Test project units
        run: nox -s generated-project-tests

      - name: Test user tests
        run: nox -s user-tests

      - name: Run coverage tests
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: nox -s coverage

      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  run_doctests:
    needs: style
    runs-on: ubuntu-latest
    name: Doctests (ubuntu-latest / Python 3.12)

    steps:
      - name: Check out pybamm-cookie repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Set up uv
        uses: yezz123/setup-uv@v4
        with:
          uv-venv: ".venv"

      - name: Install nox
        run: uv pip install nox[uv]

      - name: Check if the documentation can be built
        run: nox -s docs
