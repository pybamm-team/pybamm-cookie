project_name:
  type: str
  default: "pybamm-example-project"
  help: "The name of your project"

project_slug:
  type: str
  help: The name of the directory containing the Python files for your project. This should be in `snake_case`, and this is what you will import it with, such as `import pybamm_example_project`.
  default: "{{ project_name|lower|replace('-', '_')|replace(' ', '_') }}"
  validator: |
    {% if ('-' in project_slug or ' ' in project_slug) %}
    The name of the directory should not contain spaces or hyphens
    {% endif %}

platform:
  type: str
  choices:
    - github
    - gitlab
  default: github
  help: "The platform you are using to host your project"

org:
  type: str
  default: "pybamm-team"
  help: "The name of your organisation (or username, if you are not part of an organisation)"

url:
  type: str
  default: "https://{{ platform }}.com/{{ org }}/{{ project_name }}"
  help: "The origin URL to your code repository"

branch:
  type: str
  default: "main"
  help: "The default branch of your repository"

full_name:
  type: str
  default: "John Doe"
  help: "Your name on your hosting platform (will be used later as your committer name)"

email:
  type: str
  default: "john@doe.com"
  help: "Your email for your hosting platform (will be used later to configure Git)"

project_short_description:
  type: str
  default: "A battery modelling project that uses the PyBaMM framework"
  help: "A short description of your project"

license:
  type: str
  choices:
    - BSD-3-Clause
    - Apache
    - MIT
  default: BSD-3-Clause
  help: "Select a license"

backend:
  type: str
  choices:
    - "hatch"
    - "setuptools"
  default: "hatch"
  help: "Choose a build backend. hatch (hatchling) is recommended for pure Python projects and for beginners, while setuptools offers more classic yet modern configuration choices"

vcs:
  type: bool
  default: false
  help: "Let the build backend get the version from your version control system (Git/Mercurial/SVN) using the hatch-vcs (for hatchling) or the setuptools-scm (for setuptools) plugins?"

mypy:
  type: bool
  default: false
  help: "Use the mypy type checker"


_copy_without_render:
  type: list
  default: ["*.yml"]

_jinja_extensions:
    - jinja2_time.TimeExtension

_subdirectory: template

_exclude:
  - copier.yml

_tasks:
  - command: git init -b {{branch}}
    working_directory: "{{project_name}}"
  - command: git config user.name {{full_name}}
    working_directory: "{{project_name}}"
  - command: git config user.email {{email}}
    working_directory: "{{project_name}}"
